name: Test
on: pull_request

jobs:
  # service:
  #   uses: timayz/.github/.github/workflows/service-testing.yml@v2.16.0
  #   with:
  #     db_name: starter

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0
      # - name: Set up tags
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ inputs.image }}
      #     labels: |
      #       org.opencontainers.image.licenses=${{ inputs.license }}
      #       org.opencontainers.image.vendor=${{ inputs.vendor }}
      #     tags: |
      #       type=schedule
      #       type=ref,event=branch
      #       type=ref,event=pr
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}
      #       type=semver,pattern={{major}}
      #       type=edge
      #       type=sha
      - name: Login to container registry
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      # - name: Build and push image with build args to container registry
      #   uses: docker/build-push-action@v3.0.0
      #   if: ${{ inputs.build-args != ''}}
      #   with:
      #     build-args: ${{ inputs.build-args }}
      #     platforms: ${{ inputs.platforms }}
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=registry,ref=${{ inputs.image }}:buildcache
      #     cache-to: type=registry,ref=${{ inputs.image }}:buildcache,mode=max
      - name: Build and push image to container registry
        uses: docker/build-push-action@v3.0.0
        # if: ${{ inputs.build-args == ''}}
        with:
          # platforms: ${{ inputs.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          # tags: ${{ steps.meta.outputs.tags }}
          # labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=timayz/starter:buildcache
          cache-to: type=registry,ref=timayz/starter:buildcache,mode=max
